version: '2'
services:
  mongodb:
    image: mongo:latest
    container_name: mongo-container
    network_mode: host
    hostname: localhost
    ports:
    - 27017:27017
  mysql-user:
    container_name: mysql
    image: mysql:8
    hostname: localhost
    ports:
    - 3306:3306
    environment:
    - MYSQL_DATABASE=authenticationserviceDB
    - MYSQL_ROOT_PASSWORD=Password@1
    - MYSQL_PASSWORD=Password@1
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
    - 15672:15672
    - 5672:5672
  
 
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    hostname: localhost
    network_mode: host
    ports:
    - 8080:8080
    restart: always
  authentication-service:
    container_name: authentication-service
    build: ./authentication-service
    hostname: localhost
    network_mode: host
    depends_on:
    - mysql-user
    - rabbitmq
    ports:
    - 8082:8082
    restart: always
  cart-service:
    container_name: cart-service
    build: ./cart-service/server
    hostname: localhost
    network_mode: host
    ports:
    - 8083:8083
    depends_on:
    - mongodb
    restart: always
  content-service:
    container_name: content-service
    build: ./contentService
    hostname: localhost
    network_mode: host
    ports:
    - 8084:8084
    depends_on:
    - mongodb
    restart: always
  course-service:
    container_name: course-service
    build: ./courseService
    hostname: localhost
    network_mode: host
    ports:
    - 8087:8087
    depends_on:
    - mongodb
    restart: always
  email-service:
    container_name: email-service
    build: ./email-service
    hostname: localhost
    network_mode: host
    ports:
    - 8085:8085
    restart: always
  payment-service:
    container_name: payment-service
    build: ./payment-service
    hostname: localhost
    network_mode: host
    ports:
    - 8086:8086
    depends_on:
    - mongodb
    restart: always
  product-webapp:
    container_name: product-webapp
    build: ./product-webapp/web-app
    hostname: localhost
    network_mode: host
    ports:
    - 3000:3000
    restart: always
  qna-service:
    container_name: qna-service
    build: ./qnaService
    hostname: localhost
    network_mode: host
    ports:
    - 8888:8888
    depends_on:
    - mongodb
    restart: always
  user-service:
    container_name: user-service
    build: ./user-service
    hostname: localhost
    network_mode: host
    ports:
    - 8088:8088
    depends_on:
    - mongodb
    restart: always